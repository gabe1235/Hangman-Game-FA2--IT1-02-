import java.util.Random;
import java.util.Scanner;

public class Hangman {
    private static final String[][] words = {
        {"terminator", "cyborg", "A futuristic cyborg assassin from a popular movie series."},
        {"banana", "fruit", "A yellow fruit that monkeys love."},
        {"computer", "device", "An electronic device used for processing data."},
        {"cow", "animal", "A farm animal that gives milk."},
        {"rain", "weather", "Water droplets that fall from clouds."},
        {"water", "liquid", "A clear liquid essential for life."}
    };
    
    private static String word;
    private static String freeHint;
    private static String fullHint;
    private static String asterisk;
    private static int incorrectGuesses;
    private static int correctGuesses;
    private static boolean extraHintUsed;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        boolean playAgain = true;

        while (playAgain) {
            resetGame();
            while (incorrectGuesses < 7 && asterisk.contains("_")) {
                System.out.println("\nGuess any letter in the word, type 'stats' to view progress, or 'hint' for the full definition:");
                System.out.println(asterisk);
                String guess = sc.next().toLowerCase();

                if (guess.equals("stats")) {
                    showStats();
                } else if (guess.equals("hint")) {
                    useHint();
                } else if (guess.length() != 1 || !Character.isLetter(guess.charAt(0))) {
                    System.out.println("Invalid input! Please enter a single letter.");
                } else {
                    hang(guess);
                }
            }

            // Ask if the player wants to play again
            System.out.print("\nDo you want to play again? (yes/no): ");
            String response = sc.next().toLowerCase();
            playAgain = response.equals("yes");
        }
        sc.close();
        System.out.println("Thanks for playing!");
    }

    public static void resetGame() {
        Random random = new Random();
        int index = random.nextInt(words.length);
        word = words[index][0];  
        freeHint = words[index][1];  
        fullHint = words[index][2];  
        asterisk = new String(new char[word.length()]).replace("\0", "_");
        incorrectGuesses = 0;
        correctGuesses = 0;
        extraHintUsed = false;

        System.out.println("\nNew game started! Try to guess the word.");
        System.out.println("Here's a free hint: " + freeHint);  // One-word free hint
    }

    public static void hang(String guess) {
        String newAsterisk = "";
        boolean correct = false;

        for (int i = 0; i < word.length(); i++) {
            if (word.charAt(i) == guess.charAt(0)) {
                newAsterisk += guess.charAt(0);
                correct = true;
            } else if (asterisk.charAt(i) != '_') {
                newAsterisk += word.charAt(i);
            } else {
                newAsterisk += "_";
            }
        }

        if (asterisk.equals(newAsterisk)) {
            incorrectGuesses++;
            System.out.println("Incorrect guess!");
            hangmanImage();
        } else {
            correctGuesses++;
            asterisk = newAsterisk;
        }

        if (asterisk.equals(word)) {
            System.out.println("Correct! You win! The word was " + word);
            showStats();
        } else if (incorrectGuesses == 7) {
            System.out.println("GAME OVER! The word was " + word);
            showStats();
        }
    }

    public static void useHint() {
        if (extraHintUsed) {
            System.out.println("You've already used your extra hint!");
            return;
        }

        System.out.println("Hint: " + fullHint);
        extraHintUsed = true;
    }

    public static void showStats() {
        System.out.println("\n=====================================");
        System.out.printf("| %-15s | %-10s |\n", "Category", "Count");
        System.out.println("-------------------------------------");
        System.out.printf("| %-15s | %-10d |\n", "Correct Guesses", correctGuesses);
        System.out.printf("| %-15s | %-10d |\n", "Incorrect Guesses", incorrectGuesses);
        System.out.printf("| %-15s | %-10s |\n", "Extra Hint Used", extraHintUsed ? "Yes" : "No");
        System.out.println("=====================================\n");
    }

    public static void hangmanImage() {
        switch (incorrectGuesses) {
            case 1:
                System.out.println("Wrong guess, try again\n\n\n\n");
                System.out.println("__|__");
                break;
            case 2:
                System.out.println("Wrong guess, try again\n |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println("__|__");
                break;
            case 3:
                System.out.println("Wrong guess, try again\n __________");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" | ");
                System.out.println("__|__");
                break;
            case 4:
                System.out.println("Wrong guess, try again\n __________");
                System.out.println(" | |");
                System.out.println(" | / \\");
                System.out.println(" | | |");
                System.out.println(" | \\_ /");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println(" |");
                System.out.println("___|__");
                break;
            case 5:
                System.out.println("Wrong guess, try again\n __________");
                System.out.println(" | |");
                System.out.println(" | / \\");
                System.out.println(" | | |");
                System.out.println(" | \\_ /");
                System.out.println(" | |");
                System.out.println(" | |");
                System.out.println(" |");
                System.out.println("___|__");
                break;
            case 6:
                System.out.println("Wrong guess, try again\n __________");
                System.out.println(" | |");
                System.out.println(" | / \\");
                System.out.println(" | | |");
                System.out.println(" | \\_ /");
                System.out.println(" | |");
                System.out.println(" | |");
                System.out.println(" | / \\ ");
                System.out.println("___|__ / \\");
                break;
            case 7:
                System.out.println("GAME OVER!");
                System.out.println(" __________");
                System.out.println(" | |");
                System.out.println(" | / \\");
                System.out.println(" | | |");
                System.out.println(" | \\_ /");
                System.out.println(" | _|");
                System.out.println(" | / | \\");
                System.out.println(" | / \\ ");
                System.out.println("__|__ / \\");
                break;
        }
    }
}
